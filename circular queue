#include<stdio.h>
#define SIZE 20
int items[SIZE];
int front= -1, rear= -1;
int isFull(){
    if((front==rear+1)||(front==0 && rear== SIZE-1)) return 1;
    return 0;
}
int isEmpty(){
    if(front==-1) return 1;
    return 0;
}
void enQueue(int element){
    if (isFull())
    printf("\n Queue is full!!\n");
    else if (front==-1)
    {
         
    front=0;
        rear=0;
    }
      else{
        rear=(rear+1)% SIZE;  
      }  
        items[rear]= element;
        printf("\n Inserted-> %d", element);
    }

int deQueue(){
    int element;
    if(isEmpty()){
        printf("\n Queue is empty!!\n");
        return (-1);
    }
    else{
            element=items[front];
            if(front==rear){
                front=-1;
                rear=-1;
            }
        else{ front= (front+1)%SIZE;
        }
    printf("\nDeleted element-> %d \n", element);
    return (element);
    }
}
void display(){
    int i;
    if(isEmpty())
    printf("\nEmpty Queue\n");
    else{
        printf("\nFront -> %d\n", front);
        printf("\nItems-> ");
        for(i=front; i!=rear+1; i=(i+1)%SIZE){
            printf("%d", items[i]);
    }
    printf("\nRear -> %d\n", rear);
    }
}
void main(){
    int choice;
    int x;
    while(1){
        printf("\n1.Insert\n");
        printf("2.Delete\n");
        printf("3.Display\n");
        printf("4.Exit\n");
        printf("Enter you choice: \n");
        scanf("%d", &choice);
        switch(choice){
            case 1: printf("Enter element: ");
                    scanf("%d", &x);
                    enQueue(x);
                     break;
            case 2: deQueue();
                     break;
            case 3: display();
                     break;
            case 4: exit(1);
            default: printf("\nInvalid choice\n");
        }
    }
}